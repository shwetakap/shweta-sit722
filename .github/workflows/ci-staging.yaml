# .github/workflows/backend_ci.yml

name: Backend CI - Test, Build and Push Images to ACR

# Trigger on push to 'testing' branch or manual dispatch
on:
  push:
    branches:
      - testing
  workflow_dispatch:
    paths:
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/ci-staging.yml'

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  # ---------------------------
  # Job 1: Test all backend services
  # ---------------------------
  test_backends:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Debug: list folders to verify paths
      - name: List backend folder
        run: ls -R backend

      # Install dependencies
      - name: Install dependencies - Customer Service
        working-directory: backend/customer_service
        run: pip install -r requirements.txt

      - name: Install dependencies - Order Service
        working-directory: backend/order_service
        run: pip install -r requirements.txt

      - name: Install dependencies - Product Service
        working-directory: backend/product_service
        run: pip install -r requirements.txt

      # Run tests
      - name: Run Customer Service Tests
        working-directory: backend/customer_service
        run: pytest tests --maxfail=1 --disable-warnings -q

      - name: Run Order Service Tests
        working-directory: backend/order_service
        run: pytest tests --maxfail=1 --disable-warnings -q

      - name: Run Product Service Tests
        working-directory: backend/product_service
        run: pytest tests --maxfail=1 --disable-warnings -q

      # Optional: Frontend tests if you have npm tests
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Run Frontend Tests
        working-directory: frontend
        run: npm test

  # ---------------------------
  # Job 2: Build and Push Docker Images (runs only if tests pass)
  # ---------------------------
  build_and_push_images:
    runs-on: ubuntu-latest
    needs: test_backends

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Azure login using Service Principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: az acr login --name ${{ env.ACR_LOGIN_SERVER }}

      # Build and push Docker images for backend services
      - name: Build and Push Customer Service Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/customer_service:latest ./backend/customer_service
          docker push ${{ env.ACR_LOGIN_SERVER }}/customer_service:latest

      - name: Build and Push Order Service Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/order_service:latest ./backend/order_service
          docker push ${{ env.ACR_LOGIN_SERVER }}/order_service:latest

      - name: Build and Push Product Service Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/product_service:latest ./backend/product_service
          docker push ${{ env.ACR_LOGIN_SERVER }}/product_service:latest

      # Build and push frontend image
      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/frontend:latest ./frontend
          docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:latest

      - name: Logout from Azure
        run: az logout
        if: always()
